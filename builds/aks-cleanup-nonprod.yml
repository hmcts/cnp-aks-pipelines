---
variables:
  connectionType: 'Azure Resource Manager'
  azureResourceGroup: 'cnp-aks-rg'
  kubernetesCluster: 'cnp-aks-cluster'
  containerRegistry: 'hmcts'
  helmVersion: '2.13.0'

jobs:
  - job: delete_namespace
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: AzureCLI@1
      displayName: 'Delete Namespace'
      inputs:
        azureSubscription: azurerm-nonprod
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(azureResourceGroup) --name $(kubernetesCluster)

          if [ "$(kubectl get ns $(namespace) 2>/dev/null)" ]; then
            kubectl delete ns $(namespace)
          else
            echo "namespace $(namespace) not found, nothing to delete."
          fi
  
  - job: delete_acr_image
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: AzureCLI@1
      displayName: 'Delete ACR image'
      enabled: true
      inputs:
        azureSubscription: azurerm-nonprod
        scriptLocation: 'inlineScript'
        inlineScript: |
          repository=`echo $(namespace) | sed 's/-pr-.*//'`
          tag=`echo $(namespace) | sed "s/$repository-//"`
          az acr repository delete -n $(containerRegistry) --image "hmcts/$repository:$tag" --yes

  - job: delete_helm_release
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: HelmInstaller@0
      displayName: 'Install Helm $(helmVersion)'
      inputs:
        helmVersion: $(helmVersion)
        installKubectl: false
    - task: AzureCLI@1
      displayName: 'Helm Delete Release'
      inputs:
        azureSubscription:  'azurerm-nonprod'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(azureResourceGroup) --name $(kubernetesCluster)
          helm init --client-only

          if [ "$(helm get $(namespace) 2>/dev/null)" ]; then
            helm delete --purge $(namespace)
          else
            echo "chart $(namespace) not found, doing nothing"
          fi
