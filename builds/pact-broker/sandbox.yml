name: Install Pact Broker (sandbox)
trigger: none

variables:
  serviceConnection: azurerm-sandbox
  acrServiceConnection: azurerm-nonprod
  acrName: hmcts
  kubectlConnectionType: "Azure Resource Manager"
  aksResourceGroup: "cnp-aks-mgmt-rg"
  clusterName: "cnp-aks-mgmt-sandbox-cluster"
  keyvaultName: "infra-vault-sandbox"
  ingressHost: sandbox-pact-broker.platform.hmcts.net
  resourceGroup: "pact-broker-mgmt-sandbox"
  helmVersion: '2.12.0'
  tenantId: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
  subscriptionId: "bf308a5c-0624-4334-8ff8-8dca9fd43783"
  postgresqlHost: "pact-broker-mgmt-sandbox.postgres.database.azure.com"
  postgresqlDatabase: "pact"
  postgresqlParametersFile: 'arm/parameters/postgresql/sandbox.json'
  postgresqlServerName: "pact-broker-mgmt-sandbox"

jobs:
- template: ../../jobs/pact-broker.yaml
  parameters:
    serviceConnection: $(serviceConnection)
    acrServiceConnection: $(acrServiceConnection)
    acrName: $(acrName)
    kubectlConnectionType: $(kubectlConnectionType)
    aksResourceGroup: $(aksResourceGroup)
    clusterName: $(clusterName)
    keyvaultName: $(keyvaultName)
    ingressHost: $(ingressHost)
    resourceGroup: $(resourceGroup)
    helmVersion: $(helmVersion)
    tenantId: $(tenantId)
    subscriptionId: $(subscriptionId)
    postgresqlHost: $(postgresqlHost)
    postgresqlDatabase: $(postgresqlDatabase)
    postgresqlParametersFile: $(postgresqlParametersFile)
    postgresqlServerName: $(postgresqlServerName)
    installPostgresql: true
