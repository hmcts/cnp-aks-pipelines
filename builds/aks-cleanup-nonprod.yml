---
name: AKS Cleanup Preview
trigger: none
pr: none
variables:
  connectionType: 'Azure Resource Manager'
  azureResourceGroup: 'cnp-aks-rg'  # cnp-aks-sandbox-rg
  kubernetesCluster: 'cnp-aks-cluster'  # cnp-aks-sandbox-cluster
  containerRegistry: 'hmcts'  # hmctssandbox
  helmVersion: '2.14.0'
  azureSubscription: azurerm-nonprod  # azurerm-sandbox

jobs:
  - job: delete_namespace
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: AzureCLI@1
      displayName: 'Delete Namespace'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(azureResourceGroup) --name $(kubernetesCluster)

          if [ "$(kubectl get ns $(namespace) 2>/dev/null)" ]; then
            kubectl delete ns $(namespace)
          else
            echo "namespace $(namespace) not found, nothing to delete."
          fi
  
  - job: untag_acr_image
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: AzureCLI@1
      displayName: 'Untag ACR image'
      enabled: true
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: 'inlineScript'
        inlineScript: |
          repository=`echo $(namespace) | sed 's/-pr-.*//'`
          tag=`echo $(namespace) | sed "s/$repository-//"`
          az acr repository show-tags -n $(containerRegistry) --repository hmcts/$repository --query "[?starts_with(@, '$tag-')]" -o tsv \
            | xargs -I% az acr repository untag -n $(containerRegistry) --image "hmcts/$repository:%"

  - job: delete_helm_release
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: HelmInstaller@0
      displayName: 'Install Helm $(helmVersion)'
      inputs:
        helmVersion: $(helmVersion)
        installKubectl: false
    - task: AzureCLI@1
      displayName: 'Helm Delete Release'
      inputs:
        azureSubscription:  '$(azureSubscription)'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(azureResourceGroup) --name $(kubernetesCluster)
          helm init --client-only

          if [ "$(helm get $(namespace) 2>/dev/null)" ]; then
            helm delete --purge $(namespace)
          else
            echo "chart $(namespace) not found, doing nothing"
          fi
