#
# Build for the Nonprod CI AKS Cluster
#
name: Nonprod AKS Pipeline
trigger: none
variables:
  environment: 'nonprod'
  aksResourceGroup: 'cnp-aks-rg'
  aksClusterName: 'cnp-aks-cluster'
  keyvaultName: 'infra-vault-nonprod'
  serviceConnection: 'azurerm-nonprod'
  aksParametersFile: 'nonprod.json'

jobs:
- job: Keyvault
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - template: ../steps/keyvault-ci.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      keyvaultName: $(keyvaultName)

- job: DeployAKS
  dependsOn: Keyvault
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    aksServicePrincipalId: $[dependencies.Keyvault.outputs['exportKeyvault.aksServicePrincipalId']]
    aksServicePrincipalSecret: $[dependencies.Keyvault.outputs['exportKeyvault.aksServicePrincipalSecret']]
  steps:
  - template: ../tasks/helm-installer.yaml
  - template: ../steps/deploy-aks.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
      aksParametersFile: $(aksParametersFile)

- job: InstallTraefik
  dependsOn: DeployAKS
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - template: ../steps/configure-helm.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
  - template: ../tasks/traefik.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
      environment: $(environment)

- job: InstallKured
  dependsOn: DeployAKS
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - template: ../steps/configure-helm.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
  - template: ../tasks/kured.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)

- job: InstallServiceCatalog
  dependsOn:
  - Keyvault
  - DeployAKS
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    svcatServicePrincipalSubscriptionId: $[dependencies.Keyvault.outputs['exportKeyvault.svcatServicePrincipalSubscriptionId']]
    svcatServicePrincipalId: $[dependencies.Keyvault.outputs['exportKeyvault.svcatServicePrincipalId']]
    svcatServicePrincipalSecret: $[dependencies.Keyvault.outputs['exportKeyvault.svcatServicePrincipalSecret']]
    svcatServicePrincipalTenantId: $[dependencies.Keyvault.outputs['exportKeyvault.svcatServicePrincipalTenantId']]
  steps:
  - template: ../steps/configure-helm.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
  - template: ../steps/service-catalog.yml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)
  - template: ../tasks/kured.yaml
    parameters:
      serviceConnection: $(serviceConnection)
      aksResourceGroup: $(aksResourceGroup)
      aksClusterName: $(aksClusterName)