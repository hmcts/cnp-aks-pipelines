---
name: AKS Cleanup Preview
trigger: none
pr: none
variables:
  connectionType: 'Azure Resource Manager'
  azureResourceGroup: 'preview-00-rg'  # cnp-aks-sandbox-rg
  kubernetesCluster: 'preview-00-aks'  # cnp-aks-sandbox-cluster
  containerRegistry: 'hmctspublic'  # hmctssandbox
  helmVersion: '3.0.2'
  azureSubscription: DCD-CFTAPPS-DEV  # azurerm-sandbox
  registrySubscription: azurerm-prod

jobs:
  - job: untag_acr_image
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: AzureCLI@1
      displayName: 'Untag ACR image'
      enabled: true
      inputs:
        scriptType: bash
        azureSubscription: $(registrySubscription)
        scriptLocation: scriptPath
        scriptPath: scripts/untag-acr-image.sh
        arguments: $(release_name) $(product) $(containerRegistry)

  - job: delete_helm_release
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: HelmInstaller@1
      displayName: 'Install Helm $(helmVersion)'
      inputs:
        helmVersionToInstall: $(helmVersion)
        installKubectl: false
    - task: AzureCLI@1
      displayName: 'Helm Delete Release'
      inputs:
        azureSubscription:  '$(azureSubscription)'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(azureResourceGroup) --name $(kubernetesCluster) -a

          if [ "$(helm get values --namespace $(namespace) $(release_name) 2>/dev/null)" ]; then
            helm delete --namespace $(namespace) $(release_name)
          else
            echo "chart $(release_name) not found, doing nothing"
          fi
